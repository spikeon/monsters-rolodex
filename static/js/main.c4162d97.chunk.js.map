{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleSearchChange","type","onChange","event","target","value","App","search","setState","filterMonsters","state","toLowerCase","includes","fetch","then","response","json","filteredMonsters","this","filter","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAGaA,G,YAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,aCHPC,EAAW,SAAAC,GAAK,OACzB,qBAAKP,UAAU,YAAf,SAEQO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCLtBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,mBAAf,OACrB,uBACIC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAU,SAACC,GAAD,OAAWH,EAAmBG,EAAMC,OAAOC,YCiD9CC,E,kDAlDX,aAAe,IAAD,8BACV,gBAiBJN,mBAAqB,SAACO,GAClB,EAAKC,SAAS,CAACD,YAnBL,EAyBdE,eAAiB,SAAAtB,GACb,IAAMoB,EAAS,EAAKG,MAAMH,OAAOI,cAC3BnB,EAAOL,EAAQK,KAAKmB,cACpBlB,EAAQN,EAAQM,MAAMkB,cAE5B,OAAOnB,EAAKoB,SAASL,IAAWd,EAAMmB,SAASL,IA3B/C,EAAKG,MAAQ,CACTH,OAAS,GACTX,SAAU,IALJ,E,gEAYO,IAAD,OAChBiB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlB,GAAQ,OAAI,EAAKY,SAAS,CAACZ,kB,+BAkB/B,IAEAqB,EADaC,KAAKR,MAAjBd,SAC2BuB,OAAOD,KAAKT,gBAE9C,OACI,sBAAKrB,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,kBACZC,mBAAoBkB,KAAKlB,qBAE7B,cAAC,EAAD,CAAUJ,SAAUqB,W,GA9ClBG,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4162d97.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = ({monster}) => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2>{monster.name}</h2>\r\n        <p>{monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport \"./card-list.styles.css\";\r\nimport {Card} from \"../card/card.component\";\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n        {\r\n            props.monsters.map(monster =>\r\n                <Card key={monster.id} monster={monster}/>\r\n            )\r\n        }\r\n\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({placeholder, handleSearchChange}) => (\r\n    <input\r\n        type=\"search\"\r\n        className=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={(event) => handleSearchChange(event.target.value)}\r\n    />\r\n)","import './App.css';\nimport {Component} from \"react/cjs/react.production.min\";\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport {SearchBox} from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            search : \"\",\n            monsters: []\n        };\n\n        // Alternate binding method\n        // this.handleSearchChange2 = this.handleSearchChange2.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(monsters => this.setState({monsters}))\n    }\n\n    handleSearchChange = (search) => {\n        this.setState({search});\n    }\n\n    // Alternate binding method\n    // handleSearchChange2(search) {...}\n\n    filterMonsters = monster => {\n        const search = this.state.search.toLowerCase();\n        const name = monster.name.toLowerCase();\n        const email = monster.email.toLowerCase();\n\n        return name.includes(search) || email.includes(search);\n    }\n\n    render() {\n        const {monsters} = this.state;\n        const filteredMonsters = monsters.filter(this.filterMonsters);\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"search monsters\"\n                    handleSearchChange={this.handleSearchChange}\n                />\n                <CardList monsters={filteredMonsters}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}